---
- hosts: tag_Owner_vzhyhalau
  become: true
  vars:
    create_containers: 1
    default_container_name: test
    default_container_image: vzhyhalau/tmscourseproject:latest
    default_container_command: sleep 30m

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

#     - name: Pull default Docker image
#       docker_image:
#         name: vzhyhalau/httpd:tagname
#         source: pull
    - debug: msg="{{ lookup('env','BUILD_NUMBER') }}"
    - name: stop nginx
      service:
          name: nginx
          state: stopped
    - name: ensure nginx is not installed
      apt: name=nginx state=absent
    - name:  Start container
      docker_container:
        name: myapp
        image: vzhyhalau/tmscourseproject:{{ lookup('env','BUILD_NUMBER') }}
        state: started
        pull: true
        recreate: yes
        hostname: "{{ ansible_hostname }}"
        restart_policy: "always"
        ports:
          - "80:80"
    - name: Stop a container
      docker_container:
        name: myapp
        state: stopped
    - name: Start a container
      docker_container:
        name: myapp
        state: started
